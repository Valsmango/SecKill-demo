spring:
  # 静态资源处理
  resources:
    # 启动默认静态资源处理，默认启用
    add-mappings: true
    cache:
      cachecontrol:
        # 缓存响应时间，单位秒；设置为3600，代表缓存一个小时
        max-age: 3600
    chain:
      # 资源链自动缓存，默认启动
      cache: true
      # 启用资源链，默认禁用
      enabled: true
      # 启用压缩资源（gzip、brotli）解析，默认禁用
      compressed: true
      # 启用h5应用缓存，默认禁用
      html-application-cache: true
    static-locations: classpath:/static/
  # thymeleaf配置
  thymeleaf:
    # 关闭缓存
    cache: false
      # 数据库配置：
    # 如果是用的原生的JDBC/mysql的jar包，调里面的对象/方法etc来连接数据库的话，固定步骤为：
    # 1，加载数据库的驱动；  2，连接数据库；  3编写SQL语句，执行，接收查询的结果；   4，关闭数据库连接，然后释放资源
  datasource:
    # 如果是5.7版本的mysql，则加载的驱动没有cj
    driver-class-name: com.mysql.cj.jdbc.Driver
    # JDBC中用于解决中文乱码useUnicode=true&characterEncoding=UTF-8
    url: jdbc:mysql://localhost:3306/seckill?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: root
    password: 123456
#    url: jdbc:mysql://192.168.187.129:3306/seckill?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
#    username: seckill
#    password: 12345678
    hikari:
      # 连接池名
      pool-name: DateHikariCP
      # 最小空闲连接数
      minimum-idle: 5
      # 空闲连接存活最大时间，默认60 0000毫秒 = 60 0秒 = 10分钟；这里设置为30分钟
      idle-timeout: 1800000
      # 最大连接数，默认10
      maximum-pool-size: 10
      # 从连接池返回的连接自动提交
      auto-commit: true
      # 最大存活时间，30分钟，如果设置为0，可以表示永久存活，默认也是30分钟
      max-lifetime: 1800000
      # 连接超时时间，30秒，默认也是30秒
      connection-timeout: 30000
      # 测试连接是否可用的查询语句，类似于心跳机制
      connection-test-query: SELECT 1
  redis:
    # 服务器地址
    host: 192.168.187.128
    # 端口
    port: 6379
    # 数据库
    database: 0
    # 连接超时时间
    timeout: 10000ms
    # 对lettuce连接池进行配置
    lettuce:
      pool:
        # 最大连接数（默认为8）
        max-active: 8
        # 默认最大连接阻塞等待时间，默认-1
        max-wait: 10000ms
        # 最大空闲连接，默认为8
        max-idle: 200
        # 最小空闲连接，默认0
        min-idle: 0


# mybatis-plus配置
mybatis-plus:
  # 配置Mapper.xml映射文件（这里先写，然后去创建对应的文件），放在resourses目录下，不要放在Mapper层接口下，那样会很混乱
  #     注：classpath*中的*是为了从多个jar文件中加载相同的文件，而不带*只能加载找到的第一个文件
  #        创建对应文件所在的位置应该是：resourses下（当前地址）新建一个文件夹，命名为mapper
  mapper-locations: classpath*:/mapper/*Mapper.xml
  # 配置MyBatis数据返回类型别名（默认别名是类名）
  type-aliases-package: com.ymt.seckill.pojo

# MyBatis SQL打印（方法接口所在的包，不是Mapper.xml所在的包）
#     注：因为可能需要打印一下MySQL，所以需要准备一下日志
logging:
  level:
    com.ymt.seckill.mapper: debug
